syntax = "proto3";

package kv;

option go_package = "github.com/raft-kv-store/proto/kv";

// Client-facing Key-Value Store API
service KVStore {
  rpc Put(PutRequest) returns (PutResponse);
  rpc Get(GetRequest) returns (GetResponse);
  rpc Delete(DeleteRequest) returns (DeleteResponse);
  rpc GetClusterStatus(ClusterStatusRequest) returns (ClusterStatusResponse);
}

message PutRequest {
  string key = 1;
  bytes value = 2;
}

message PutResponse {
  bool success = 1;
  string error = 2;
  uint64 index = 3; // Raft log index where this was committed
}

message GetRequest {
  string key = 1;
}

message GetResponse {
  bool found = 1;
  bytes value = 2;
  string error = 3;
}

message DeleteRequest {
  string key = 1;
}

message DeleteResponse {
  bool success = 1;
  string error = 2;
  uint64 index = 3;
}

message ClusterStatusRequest {}

message ClusterStatusResponse {
  string node_id = 1;
  string state = 2; // "leader", "follower", "candidate"
  uint64 current_term = 3;
  string leader_id = 4;
  repeated string peers = 5;
  uint64 commit_index = 6;
  uint64 last_applied = 7;
}
